service: rest-api-express
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: sa-east-1
  apiGateway:
    shouldStartNameWithService: true
  environment:
    MONGO_INITDB_USERNAME: ${env:MONGO_INITDB_USERNAME}
    MONGO_INITDB_PASSWORD: ${env:MONGO_INITDB_PASSWORD}
    MONGO_CLUSTER: ${env:MONGO_CLUSTER}
    MONGO_INITDB_DATABASE: ${env:MONGO_INITDB_DATABASE}
    MONGO_CONNECTION_PROTOCOL: ${env:MONGO_CONNECTION_PROTOCOL}
    PORT: ${env:PORT}
    JWT_SECRET: ${env:JWT_SECRET}
    NODE_ENV: ${self:custom.stage}

#  iamRoleStatements:
#    - Effect: Allow
#      Action:
#        - "sts:AssumeRole"
#      Resource: ${file(./realtimenotification/handler.js):externalRol.arn}

plugins:
  - serverless-webpack

package:
  individually: true # to package functions individually. You can toggle this and check the difference webpack generates

functions:
  rest-api:
    handler: src/index.handler
    events:
      - http:
          path: /
          method: any
          cors: true
      - http:
          path: /{proxy+}
          method: any
          cors: true

custom:
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: webpack.config.js
    includeModules: true
    packager: 'npm'